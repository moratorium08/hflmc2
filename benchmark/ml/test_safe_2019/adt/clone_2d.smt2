(set-logic HORN)
(set-info :source |
  Benchmark: /home/katsura/hflmc2/benchmark/ml/test_safe_2019/adt/clone_2d.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_140[0:0]| ( Int) Bool)
(declare-fun |map[0:0][0:2][0:0]| ( Int  Int) Bool)
(declare-fun |map[0:0][0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |map[0:2][0:1][0:1][0:1][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |map[0:0][0:0]| ( Int) Bool)
(declare-fun |clone[0:5][0:1][0:1][0:1][0:1][0:0]| ( Int  Int  Int  Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |clone[0:3][0:1][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |clone_38[0:4][0:1][0:1][0:0]| ( Int  Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |map[0:2][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |clone[0:5][0:1][0:1][0:0]| ( Int  Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |map[0:1]| ( Int) Bool)
(declare-fun |clone[0:5][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |clone[0:4]| ( Int  Int  Int  Int) Bool)
(declare-fun |clone_38[0:4][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |clone_38[0:3]| ( Int  Int  Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_140[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var1709 Int)(var1710 Int)(var1708 Int)) (=> (and (|map[0:0][0:0]| x1) (and (|clone[0:5][0:0]| var1709 0 var1710 var1709 var1708) (and (|clone_38[0:4][0:0]| var1709 0 0 var1709 var1710) (<= x1 0)))) (|fail_140[0:0]| x0))))
(assert (forall ((x2 Int)(var1711 Int)(var1712 Int)(var1713 Int)) (=> (and (|map[0:2][0:1][0:0]| var1711 0 var1712) (and (|map[0:1]| var1711) (and (|map[0:0][0:2][0:0]| var1712 var1713) (and (|map[0:0][0:0]| x2) (>= var1711 1))))) (|map[0:0][0:0]| x2))))
(assert (forall ((x2 Int)(var1714 Int)) (=> (and (|map[0:2][0:1][0:0]| var1714 0 x2) (and (|map[0:1]| var1714) (>= var1714 1))) (|map[0:0][0:0]| x2))))
(assert (forall ((x5 Int)(x3 Int)(x4 Int)(var1715 Int)(x1 Int)(var1717 Int)(x2 Int)(x0 Int)) (=> (and (|map[0:0][0:2][0:0]| x2 x0) (and (|map[0:2][0:1][0:0]| x1 var1717 x4) (and (|map[0:2][0:1][0:0]| x1 0 x2) (and (|map[0:1]| x1) (and (|map[0:1]| x5) (and (= (+ 1 var1715) x1) (and (= (+ 1 x5) x1) (and (>= x1 1) (= var1717 (+ 1 x3)))))))))) (|map[0:2][0:1][0:0]| x5 x3 x4))))
(assert (forall ((x4 Int)(x2 Int)(x3 Int)(x1 Int)(var1719 Int)) (=> (and (|clone[0:5][0:0]| x1 0 var1719 x1 x4) (and (|clone[0:5][0:1][0:1][0:0]| x1 0 var1719 x1 x4 x2 x3) (and (|clone_38[0:4][0:0]| x1 0 0 x1 var1719) (|map[0:1]| x4)))) (|map[0:2][0:1][0:0]| x4 x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)(x0 Int)(x1 Int)(var1722 Int)(var1724 Int)(var1723 Int)) (=> (and (|clone[0:5][0:0]| x2 x3 x4 var1723 var1724) (and (|clone[0:5][0:0]| x2 x3 x4 x5 x6) (and (|clone[0:4]| x2 x3 x4 x5) (and (= var1722 (+ 1 var1724)) (and (= x6 (+ 1 var1724)) (and (= (+ 1 var1723) x5) (and (= x0 0) (and (>= x5 1) (= x1 x4))))))))) (|clone[0:5][0:1][0:1][0:0]| x2 x3 x4 x5 x6 x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)) (=> (and (|map[0:2][0:1][0:0]| x1 0 x2) (and (|map[0:1]| x1) (and (|map[0:0][0:2][0:0]| x2 x3) (and (= (+ 1 x0) x1) (>= x1 1))))) (|map[0:1]| x0))))
(assert (forall ((x3 Int)(x4 Int)(x1 Int)(var1730 Int)(x2 Int)) (=> (and (|map[0:0][0:1][0:1][0:0]| x3 0 x4) (and (|map[0:0][0:0]| x3) (and (|clone[0:5][0:0]| x1 0 var1730 x1 x2) (and (|clone_38[0:4][0:0]| x1 0 0 x1 var1730) (>= x3 1))))) (|map[0:0][0:2][0:0]| x3 x4))))
(assert (forall ((x4 Int)(x2 Int)(x3 Int)(var1735 Int)) (=> (and (|map[0:2][0:1][0:1][0:1][0:0]| var1735 0 x4 x2 x3) (and (|map[0:2][0:1][0:0]| var1735 0 x4) (and (|map[0:1]| var1735) (and (|map[0:0][0:0]| x4) (>= var1735 1))))) (|map[0:0][0:1][0:1][0:0]| x4 x2 x3))))
(assert (forall ((x4 Int)(x5 Int)(x6 Int)(x2 Int)(x3 Int)(x1 Int)(var1738 Int)) (=> (and (|clone[0:5][0:0]| x1 0 var1738 x1 x4) (and (|clone[0:5][0:1][0:1][0:0]| x1 0 var1738 x1 x4 x5 x6) (and (|clone[0:5][0:1][0:1][0:1][0:1][0:0]| x1 0 var1738 x1 x4 x5 x6 x2 x3) (and (|clone_38[0:4][0:0]| x1 0 0 x1 var1738) (and (|map[0:1]| x4) (|map[0:2][0:1][0:0]| x4 x5 x6)))))) (|map[0:2][0:1][0:1][0:1][0:0]| x4 x5 x6 x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)(x7 Int)(x8 Int)(x0 Int)(x1 Int)(var1744 Int)(var1746 Int)(var1745 Int)) (=> (and (|clone[0:5][0:0]| x2 x3 x4 var1745 var1746) (and (|clone[0:5][0:0]| x2 x3 x4 x5 x6) (and (|clone[0:5][0:1][0:1][0:0]| x2 x3 x4 x5 x6 x7 x8) (and (|clone[0:3][0:1][0:0]| x2 x3 x4 x0 x1) (and (|clone[0:4]| x2 x3 x4 x5) (and (= var1744 (+ 1 var1746)) (and (= x6 (+ 1 var1746)) (and (= (+ 1 var1745) x5) (and (= x7 0) (and (>= x5 1) (= x8 x4))))))))))) (|clone[0:5][0:1][0:1][0:1][0:1][0:0]| x2 x3 x4 x5 x6 x7 x8 x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)) (=> (and (|clone_38[0:4][0:1][0:1][0:0]| x0 x1 0 x0 x2 x3 x4) (and (|clone_38[0:4][0:0]| x0 x1 0 x0 x2) (= x1 0))) (|clone[0:3][0:1][0:0]| x0 x1 x2 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)(x0 Int)(x1 Int)(var1749 Int)(var1751 Int)(var1750 Int)) (=> (and (|clone_38[0:4][0:0]| x2 x3 0 var1750 var1751) (and (|clone_38[0:4][0:0]| x2 x3 x4 x5 x6) (and (|clone_38[0:3]| x2 x3 x4 x5) (and (= var1749 (+ 1 var1751)) (and (= x6 (+ 1 var1751)) (and (= (+ 1 var1750) x5) (and (= x1 0) (and (= x0 0) (>= x5 1))))))))) (|clone_38[0:4][0:1][0:1][0:0]| x2 x3 x4 x5 x6 x0 x1))))
(assert (forall ((x2 Int)(var1761 Int)) (=> (and (|map[0:2][0:1][0:0]| var1761 0 x2) (and (|map[0:1]| var1761) (>= var1761 1))) (|map[0:0][0:0]| x2))))
(assert (forall ((x4 Int)(x2 Int)(x3 Int)(x1 Int)(var1763 Int)) (=> (and (|clone[0:5][0:0]| x1 0 var1763 x1 x4) (and (|clone[0:5][0:1][0:1][0:0]| x1 0 var1763 x1 x4 x2 x3) (and (|clone_38[0:4][0:0]| x1 0 0 x1 var1763) (|map[0:1]| x4)))) (|map[0:2][0:1][0:0]| x4 x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)(x0 Int)(x1 Int)(var1766 Int)(var1768 Int)(var1767 Int)) (=> (and (|clone[0:5][0:0]| x2 x3 x4 var1767 var1768) (and (|clone[0:5][0:0]| x2 x3 x4 x5 x6) (and (|clone[0:4]| x2 x3 x4 x5) (and (= var1766 (+ 1 var1768)) (and (= x6 (+ 1 var1768)) (and (= (+ 1 var1767) x5) (and (= x0 0) (and (>= x5 1) (= x1 x4))))))))) (|clone[0:5][0:1][0:1][0:0]| x2 x3 x4 x5 x6 x0 x1))))
(assert (forall ((x2 Int)(x1 Int)(var1770 Int)) (=> (and (|clone[0:5][0:0]| x1 0 var1770 x1 x2) (|clone_38[0:4][0:0]| x1 0 0 x1 var1770)) (|map[0:1]| x2))))
(assert (forall ((x1 Int)(x3 Int)(x2 Int)(x0 Int)(x4 Int)(var1772 Int)(var1771 Int)) (=> (and (|clone[0:4]| x1 x3 x2 x0) (and (|clone[0:5][0:0]| x1 x3 x2 var1771 var1772) (and (= x4 (+ 1 var1772)) (and (>= x0 1) (= (+ 1 var1771) x0))))) (|clone[0:5][0:0]| x1 x3 x2 x0 x4))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x4 Int)(x0 Int)) (=> (and (|clone[0:4]| x1 x2 x3 x4) (and (= x0 0) (<= x4 0))) (|clone[0:5][0:0]| x1 x2 x3 x4 x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)(x4 Int)) (=> (and (|clone[0:4]| x1 x2 x3 x4) (and (= (+ 1 x0) x4) (>= x4 1))) (|clone[0:4]| x1 x2 x3 x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|clone_38[0:4][0:0]| x1 x2 0 x1 x3) (and (= x2 0) (= x1 x0))) (|clone[0:4]| x1 x2 x3 x0))))
(assert (forall ((x1 Int)(x3 Int)(x2 Int)(x0 Int)(x4 Int)(var1774 Int)(var1773 Int)) (=> (and (|clone_38[0:3]| x1 x3 x2 x0) (and (|clone_38[0:4][0:0]| x1 x3 0 var1773 var1774) (and (= x4 (+ 1 var1774)) (and (= (+ 1 var1773) x0) (>= x0 1))))) (|clone_38[0:4][0:0]| x1 x3 x2 x0 x4))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x4 Int)(x0 Int)) (=> (and (|clone_38[0:3]| x1 x2 x3 x4) (and (= x0 0) (<= x4 0))) (|clone_38[0:4][0:0]| x1 x2 x3 x4 x0))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(x5 Int)(x4 Int)) (=> (and (|clone_38[0:3]| x2 x3 x4 x5) (and (= x0 0) (and (= (+ 1 x1) x5) (>= x5 1)))) (|clone_38[0:3]| x2 x3 x0 x1))))
(assert (forall ((x3 Int)(x2 Int)(x0 Int)(x1 Int)) (=> (and (= x0 0) (and (= x2 0) (= x3 x1))) (|clone_38[0:3]| x3 x2 x0 x1))))
(check-sat)
(get-model)
(exit)
