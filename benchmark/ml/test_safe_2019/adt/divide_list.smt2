(set-logic HORN)
(set-info :source |
  Benchmark: /home/katsura/hflmc2/benchmark/ml/test_safe_2019/adt/divide_list.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_234[0:0]| ( Int) Bool)
(declare-fun |length[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |length[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |length[0:0]| ( Int) Bool)
(declare-fun |make_int_list[0:1][0:1][0:1][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |divide[0:2][0:2]| ( Int  Int  Int) Bool)
(declare-fun |divide[0:0]| ( Int) Bool)
(declare-fun |make_int_list[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |make_int_list[0:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_234[0:0]| x0))))
(assert (forall ((x0 Int)(x4 Int)(x5 Int)(x2 Int)(x1 Int)(x3 Int)(var1733 Int)) (=> (and (|length[0:2][0:0]| x2 x5) (and (|length[0:2][0:0]| x1 x4) (and (|divide[0:2][0:2]| x1 x2 x3) (and (|make_int_list[0:1][0:0]| var1733 x1) (<= (+ 1 x4) x5))))) (|fail_234[0:0]| x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[0:0]| x1) (and (= x0 0) (<= x1 0))) (|length[0:2][0:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)(x3 Int)(x2 Int)(var1734 Int)) (=> (and (|length[0:2][0:0]| x0 x3) (and (|divide[0:2][0:2]| x0 x1 x2) (|make_int_list[0:1][0:0]| var1734 x0))) (|length[0:0]| x1))))
(assert (forall ((x1 Int)(x2 Int)(var1735 Int)(var1736 Int)) (=> (and (|length[0:2][0:0]| x1 var1735) (and (|length[0:1][0:1][0:0]| x1 0 var1736) (and (|length[0:0]| x1) (and (>= x1 1) (= x2 (+ 1 var1735)))))) (|length[0:2][0:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[0:0]| x1) (and (= x0 0) (<= x1 0))) (|length[0:2][0:0]| x1 x0))))
(assert (forall ((x0 Int)(x2 Int)) (=> (and (|length[0:1][0:1][0:0]| x0 0 x2) (and (|length[0:0]| x0) (>= x0 1))) (|length[0:0]| x0))))
(assert (forall ((x4 Int)(x2 Int)(x3 Int)(var1738 Int)(x0 Int)(x1 Int)) (=> (and (|make_int_list[0:1][0:0]| var1738 x4) (and (|make_int_list[0:1][0:1][0:1][0:0]| var1738 x4 x2 x3) (and (|divide[0:2][0:2]| x4 x0 x1) (|length[0:0]| x4)))) (|length[0:1][0:1][0:0]| x4 x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var1741 Int)(var1743 Int)(var1746 Int)(var1742 Int)(var1744 Int)(var1745 Int)) (=> (and (|make_int_list[0:1][0:0]| var1742 var1743) (and (|make_int_list[0:1][0:0]| var1744 var1745) (and (|make_int_list[0:1][0:1][0:1][0:0]| var1744 var1745 var1746 x1) (and (|make_int_list[0:1][0:0]| x2 x3) (and (|make_int_list[0:0]| x2) (and (= var1741 (+ 1 var1743)) (and (= x3 (+ 1 var1743)) (and (= (+ 1 var1746) x0) (not (= x0 0)))))))))) (|make_int_list[0:1][0:1][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var1749 Int)(var1751 Int)(var1750 Int)) (=> (and (|make_int_list[0:1][0:0]| var1750 var1751) (and (|make_int_list[0:1][0:0]| x2 x3) (and (|make_int_list[0:0]| x2) (and (= var1749 (+ 1 var1751)) (and (= x3 (+ 1 var1751)) (and (= x1 0) (= x0 0))))))) (|make_int_list[0:1][0:1][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(var1758 Int)(var1757 Int)) (=> (and (|make_int_list[0:1][0:0]| var1757 var1758) (and (|make_int_list[0:0]| x0) (= x1 (+ 1 var1758)))) (|make_int_list[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_int_list[0:0]| x0) (= x1 0)) (|make_int_list[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x2 Int)) (=> (|make_int_list[0:0]| x2) (|make_int_list[0:0]| x0))))
(assert (forall ((x0 Int)(x5 Int)(var1760 Int)(x2 Int)(var1759 Int)(x4 Int)) (=> (and (|make_int_list[0:1][0:0]| var1759 x2) (and (|make_int_list[0:0]| x4) (and (not (= x5 0)) (= var1760 (+ 1 x2))))) (|make_int_list[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var1764 Int)) (=> (and (|divide[0:2][0:2]| x0 x1 x2) (|make_int_list[0:1][0:0]| var1764 x0)) (|length[0:0]| x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|divide[0:0]| x2) (and (= x0 0) (and (= x1 0) (<= x2 0)))) (|divide[0:2][0:2]| x2 x0 x1))))
(assert (forall ((x0 Int)(var1765 Int)) (=> (|make_int_list[0:1][0:0]| var1765 x0) (|divide[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var1767 Int)(var1766 Int)) (=> (and (|make_int_list[0:1][0:0]| var1766 var1767) (and (|make_int_list[0:0]| x0) (= x1 (+ 1 var1767)))) (|make_int_list[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_int_list[0:0]| x0) (= x1 0)) (|make_int_list[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x2 Int)) (=> (|make_int_list[0:0]| x2) (|make_int_list[0:0]| x0))))
(assert (forall ((x0 Int)) (|make_int_list[0:0]| x0)))
(check-sat)
(get-model)
(exit)
